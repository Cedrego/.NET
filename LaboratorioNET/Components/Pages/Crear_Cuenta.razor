@page "/crear_cuenta"

<style>
    .submit-button {
        position: relative;
        z-index: 10;
    }
</style>

<PageTitle>Crear Cuenta</PageTitle>

@using System.Globalization

<!-- Contenedor principal -->
<div class="main-container">

    <!-- Encabezado -->
    <header class="page-title-box">
        <h1>SportEvent Manager</h1>
    </header>

    <!-- Caja central -->
    <div class="menu-box">
        <h2>Crear Cuenta</h2>

        <div class="form-container">

            <!-- Nombre -->
            <p><strong>Nombre completo:</strong></p>
            <InputText @bind-Value="nombre" class="form-input" />

            <!-- Correo -->
            <p><strong>Correo electrónico:</strong></p>
            <InputText @bind-Value="correo" class="form-input" type="email" />

            <!-- Contraseña -->
            <p><strong>Contraseña:</strong></p>
            <InputText @bind-Value="contraseña" class="form-input" type="password" />

            <!-- Fecha de nacimiento -->
            <p><strong>Fecha de nacimiento:</strong></p>
            <InputDate @bind-Value="fechaNacimiento" class="form-input" />

            <!-- Nacionalidad -->
            <p><strong>Nacionalidad:</strong></p>
            <InputSelect @bind-Value="nacionalidad" class="form-input">
                @foreach (var pais in paises)
                {
                    <option value="@pais">@pais</option>
                }
            </InputSelect>

            <!-- Cédula -->
            <p><strong>Cédula:</strong></p>
            <InputText @bind-Value="cedula" class="form-input" />

            <!-- Botón -->
            <br><br>
            @if (!string.IsNullOrEmpty(mensajeError)){
                <p style="color:red;">@mensajeError</p>
            }
            <button type="button" class="submit-button" @onclick="CrearCuenta">Crear cuenta</button>
        </div>
    </div>
</div>

@code {
    [Inject] private NavigationManager NavigationManager { get; set; }
    private string mensajeError = "";

    private string nombre = "";
    private string correo = "";
    private string contraseña = "";
    private string nacionalidad = "";
    private string cedula = "";
    private DateTime? fechaNacimiento = null;

    // Lista de países
    private List<string> paises = new List<string>();

    protected override void OnInitialized()
    {
        // Carga dinámica de todos los países según la cultura del sistema
        paises = CultureInfo
        .GetCultures(CultureTypes.SpecificCultures)
        .Select(c =>
        {
            try
            {
                var region = new RegionInfo(c.Name);
                return new { Codigo = region.TwoLetterISORegionName, Nombre = region.DisplayName };
                //DisplayName muestra el nombre completo del país según el idioma del sistema
            }
            catch
            {
                return null;
            }
        })
        .Where(p => p != null)
        .GroupBy(p => p.Codigo) // agrupa por código ISO para evitar duplicados
        .Select(g => g.First().Nombre)
        .OrderBy(p => p)
        .ToList();

    }

    private async Task CrearCuenta()
    {
        if (string.IsNullOrWhiteSpace(nombre)){
            mensajeError = "El campo Nombre completo está vacío.";
            StateHasChanged();
            return;
        }

        if (string.IsNullOrWhiteSpace(correo)){
            mensajeError = "El campo Correo electrónico está vacío.";
            StateHasChanged();
            return;
        }

        if (string.IsNullOrWhiteSpace(contraseña)){
            mensajeError = "El campo Contraseña está vacío.";
            StateHasChanged();
            return;
        }

        if (fechaNacimiento == null){
            mensajeError = "El campo Fecha de nacimiento está vacío.";
            StateHasChanged();
            return;
        }

        if (string.IsNullOrWhiteSpace(nacionalidad)){
            mensajeError = "El campo Nacionalidad está vacío.";
            StateHasChanged();
            return;
        }

        if (string.IsNullOrWhiteSpace(cedula)){
            mensajeError = "El campo Cédula está vacío.";
            StateHasChanged();
            return;
        }
        NavigationManager.NavigateTo("/");
    }
}
